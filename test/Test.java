
public class Test {

    static void getFareAmount() {
        int increment;
//        double[] price = p;
        double[] price = {510, 1.90, 1.80, 1.70, 1.60, 1.50, 1.40, 1.30, 1.20, 0.90, 0.80};
        for (int i = 1; i <= 3500; i++) {
            if (i <= 300) {
                increment = 4;
                System.out.println(i + " - " + (i + increment) + " Rs. " + (price[0]));
                i += increment;
            } else if (i >= 301 && i <= 1000) {
                increment = 9;
                System.out.println(i + " - " + (i + increment) + " Rs. " + (i * price[1]));
                i += increment;
            } else if (i >= 1001 && i <= 2500) {
                increment = 24;
                System.out.println(i + " - " + (i + increment) + " Rs. " + (i * price[8]));
                i += increment;
            } else if (i >= 2501 && i <= 3499) {
                increment = 49;
                System.out.println(i + " - " + (i + increment) + " Rs. " + (i * price[10]));
                i += increment;
            }
        }
    }
    
    static double getFareAmount(int km) {
        int increment;
//        double[] price = p;
        double price = 1.9;
        for (int i = 1; i <= 3500; i++) {
            if (i <= 300) {
                increment = 4;
                System.out.println(i + " - " + (i + increment) + " Rs. " + (price));
                i += increment;
            } else if (i >= 301 && i <= 1000) {
                increment = 9;
                System.out.println(i + " - " + (i + increment) + " Rs. " + (i * (price)));
                i += increment;
            } else if (i >= 1001 && i <= 2500) {
                increment = 24;
                System.out.println(i + " - " + (i + increment) + " Rs. " + (i * (price-0.01)));
                i += increment;
            } else if (i >= 2501 && i <= 3499) {
                increment = 49;
                System.out.println(i + " - " + (i + increment) + " Rs. " + (i * (price-0.89)));
                i += increment;
            }
        }
        return 0.0;
    }

    static double getBaseFare(int km) {

        int baseFare = 510;
        int minKm = 300;
        double perKm = 1.25;
        if (km > minKm) {
            return 510 + (km * perKm);
        } else {
            return baseFare;
        }

    }

    public static void main(String[] args) {
//        getAmount(6);

//        int Minimum_distance = 300;
//
//        int Minimum_fare = 510;
//        int reservation_charge = 40;
//        int superfast_charge = 45;
        // .5882352941176471 *
        //System.out.println(470+40+45);
//        System.out.println(320 * 0.5882352941176471);
//        System.out.println(510 + 188.23529411764707);
        //System.out.println(getBaseFare(525));
        getFareAmount(4);
//        System.out.println(1.903654485049834 - 1.893890675241158);
//        System.out.println(1.893890675241158 - 1.872274143302181);
//        System.out.println(1.872274143302181 - 1.858006042296073);
//        System.out.println(1.858006042296073 - 1.838709677419355);
//        System.out.println(1.838709677419355 - 1.820512820512821);
//        System.out.println(1.820512820512821 - 1.808864265927978);
//        System.out.println(1.808864265927978 - 1.792452830188679);
//        System.out.println(1.792452830188679 - 1.776902887139108);
//        System.out.println(1.776902887139108 - 1.769820971867008);
//        System.out.println(1.769820971867008 - 1.753117206982544);
//        System.out.println(1.753117206982544 - 1.742092457420925);
//        System.out.println(1.742092457420925 - 1.738717339667458);
//        System.out.println(1.738717339667458 - 1.726218097447796);
//        System.out.println(1.726218097447796 - 1.718820861678005);
//        System.out.println(1.718820861678005 - 1.70509977827051);
//        System.out.println(1.70509977827051 - 1.6941431670282);
//        System.out.println(1.6941431670282 - 1.690021231422505);
//        System.out.println(1.690021231422505 - 1.675675675675676);
//        System.out.println(1.675675675675676 - 1.672097759674134);
//        System.out.println(1.672097759674134 - 1.728542914171657);
//        System.out.println(1.391608391608392 - 1.37719298245614);
//        System.out.println(0.8256395177888856 - 0.8191828455520139);
//        System.out.println(System.getProperty("user.dir"));
    }
}

/*
301-310 / 573  = 0.525305410122164       1.903654485049834       1.848387096774194
311-320 / 589  = 0.5280135823429542      1.893890675241158       1.840625
321-330 / 601  = 0.5341098169717138      1.872274143302181       1.821212121212121
331-340 / 615  = 0.5382113821138211      1.858006042296073       1.808823529411765
341-350 / 627  = 0.543859649122807       1.838709677419355       1.791428571428571
351-360 / 639  = 0.5492957746478873      1.820512820512821       1.775
361-370 / 653  = 0.552833078101072       1.808864265927978       1.764864864864865
371-380 / 665  = 0.5578947368421053      1.792452830188679       1.75
381-390 / 677  = 0.5627769571639586      1.776902887139108       1.735897435897436
391-400 / 692  = 0.565028901734104       1.769820971867008       1.73
401-410 / 703  = 0.5704125177809388      1.753117206982544       1.714634146341463
411-420 / 716  = 0.5740223463687151      1.742092457420925       1.704761904761905
421-430 / 732  = 0.5751366120218579      1.738717339667458       1.702325581395349
431-440 / 744  = 0.5793010752688172      1.726218097447796       1.690909090909091
441-450 / 758  = 0.5817941952506596      1.718820861678005       1.684444444444444
451-460 / 769  = 0.5864759427828349      1.70509977827051        1.671739130434783
461-470 / 781  = 0.5902688860435339      1.6941431670282         1.661702127659574
471-480 / 796  = 0.5917085427135678      1.690021231422505       1.658333333333333
481-490 / 806  = 0.5967741935483871      1.675675675675676       1.644897959183673
491-500 / 821  = 0.561510353227771       1.672097759674134       1.642
501-510 / 866  = 0.5785219399538106      1.728542914171657       1.698039215686275

591-600 / 971  =                            1.642978003384095
601-610 / 980  =                            1.630615640599002

991-1000 / 1373                              1.385469223007064
1001-1025 / 1393                             1.391608391608392

1451-1475 / 1732                             1.193659545141282
1476-1500 / 1760                             1.192411924119241
1501-1525 / 1769                             1.17854763491006       1.16

1976-2000 / 2113                             1.069331983805668
2001-2025 / 2138                             1.068465767116442

2476-2500 / 2361                             0.9535541195476575
2501-2550 / 2376                             0.9500199920031987

2951-3000 / 2608                             0.8837682141646899
3001-3025 / 2615                             0.8713762079306898

3401-3450 / 2808                             0.8256395177888856
3451-3500 / 2827                             0.8191828455520139





 */
